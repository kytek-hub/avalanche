"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const src_1 = __importStar(require("src"));
const buffer_1 = require("buffer/");
const ip = "localhost";
const port = 9650;
const protocol = "http";
const networkID = 1;
const avalanche = new src_1.default(ip, port, protocol, networkID);
const mnemonic = src_1.Mnemonic.getInstance();
const xchain = avalanche.XChain();
const xKeychain = xchain.keyChain();
describe("HDNode", () => {
    const xPriv = "xprv9s21ZrQH143K4RH1nRkHwuVz3qGREBLobwUoUBowLDucQXm4do8jvz12agvjHrAwjJXtq9BZ87WBPUPScDBnjKvBKVQ5xbS7GQwJKW7vXLD";
    const childXPriv = "xprvA7X7udsZk3q9mNMcGnN8PKHv5eHm6JA3TRzW2HsWnrYHbccXh5YMnRLA83VCPKWQUFmKf9AfCXSmoFs7HJ8Yr1LK52wJDVk262vGFszM4nb";
    const xPub = "xpub661MyMwAqRbcFSdAk5S6UECmA6MFQWiRBfPU5AsVcmrKY5HoFKPNYrKEq7isvaZVfNxhkrv5oXxFpQc6AVEcVW5NxeamKD6LyLUDMntbnq7";
    const seed = 'a0c42a9c3ac6abf2ba6a9946ae83af18f51bf1c9fa7dacc4c92513cc4dd015834341c775dcd4c0fac73547c5662d81a9e9361a0aac604a73a321bd9103bce8af';
    const msg = "bb413645935a9bf1ecf0c3d30df2d573";
    const m = "immune year obscure laptop wage diamond join glue ecology envelope box fade mixed cradle athlete absorb stick rival punch dinosaur skin blind benefit pretty";
    const addrs = [
        'X-avax15qwuklmrfcmfw78yvka9pjsukjeevl4aveehq0',
        'X-avax13wqaxm6zgjq5qwzuyyxyl9yrz3edcgwgfht6gt',
        'X-avax1z3dn3vczxttts8dsdjfgtnkekf8nvqhhsj5stl',
        'X-avax1j6kze9n7r3e8wq6jta5mf6pd3fwnu0v9wygc8p',
        'X-avax1ngasfmvl8g63lzwznp0374myz7ajt4746g750m',
        'X-avax1pr7pzcggtrk6uap58sfsrlnhqhayly2gtlux9l',
        'X-avax1wwtn3gx7ke4ge2c29eg5sun36nyj55u4dle9gn',
        'X-avax13527pvlnxa4wrfgt0h8ya7nkjawqq29sv5s89x',
        'X-avax1gw6agtcsz969ugpqh2zx2lmjchg6npklvp43qq',
        'X-avax10agjetvj0a0vf6wtlh7s6ctr8ha8ch8km8z567'
    ];
    test("derive", () => {
        const hdnode = new src_1.HDNode(seed);
        const path = "m/9000'/2614666'/4849181'/4660'/2'/1/3";
        const child = hdnode.derive(path);
        expect(child.privateExtendedKey).toBe(childXPriv);
    });
    test("fromMasterSeedBuffer", () => {
        const hdnode = new src_1.HDNode(buffer_1.Buffer.from(seed));
        expect(hdnode.privateExtendedKey).toBe(xPriv);
    });
    test("fromMasterSeedString", () => {
        const hdnode = new src_1.HDNode(seed);
        expect(hdnode.privateExtendedKey).toBe(xPriv);
    });
    test("fromXPriv", () => {
        const hdnode = new src_1.HDNode(xPriv);
        expect(hdnode.privateExtendedKey).toBe(xPriv);
    });
    test("fromXPub", () => {
        const hdnode = new src_1.HDNode(xPub);
        expect(hdnode.publicExtendedKey).toBe(xPub);
    });
    test("sign", () => {
        const hdnode = new src_1.HDNode(xPriv);
        const sig = hdnode.sign(buffer_1.Buffer.from(msg));
        expect(buffer_1.Buffer.isBuffer(sig)).toBeTruthy();
    });
    test("verify", () => {
        const hdnode = new src_1.HDNode(xPriv);
        const sig = hdnode.sign(buffer_1.Buffer.from(msg));
        const verify = hdnode.verify(buffer_1.Buffer.from(msg), sig);
        expect(verify).toBeTruthy();
    });
    test("wipePrivateData", () => {
        const hdnode = new src_1.HDNode(xPriv);
        hdnode.wipePrivateData();
        expect(hdnode.privateKey).toBeNull();
    });
    test("BIP44", () => {
        const seed = mnemonic.mnemonicToSeedSync(m);
        const hdnode = new src_1.HDNode(seed);
        for (let i = 0; i <= 9; i++) {
            const child = hdnode.derive(`m/44'/9000'/0'/0/${i}`);
            xKeychain.importKey(child.privateKeyCB58);
        }
        const xAddressStrings = xchain.keyChain().getAddressStrings();
        expect(xAddressStrings).toStrictEqual(addrs);
    });
});
//# sourceMappingURL=data:application/json;base64,